import{AssertNotNull}from"/static/engine/assertions/AssertNotNull.js";import{Mouse}from"/static/engine/controller/Mouse.js";import{MouseEditor}from"/static/engine/controller/mouse/MouseEditor.js";import{Button}from"/static/engine/graphics/ui/Button.js";import{Overlay}from"/static/engine/graphics/ui/Overlay.js";import{PersistedObjects}from"/static/engine/persistence/PersistedObjects.js";export class PersistedObjectsEditor{constructor(t,s,e){AssertNotNull(t,"argument filePath in "+this.constructor.name+".js should not be null"),AssertNotNull(s,"argument create in "+this.constructor.name+".js should not be null"),AssertNotNull(e,"argument mapFromJson in "+this.constructor.name+".js should not be null"),this.filePath=t,this.create=s,this.mapFromJson=e,this.persistedObjects=new PersistedObjects(t,e),this.mouseEditor=new MouseEditor,this.persistedObjects.objects.forEach(t=>{this.mouseEditor.add(t)}),this.mouseEditor.onClick=t=>{const e=s(t);this.mouseEditor.add(e),this.persistedObjects.add(e)},this.mouseEditor.moved=t=>{this.persistedObjects.persist(t)},this.mouseEditor.remove=t=>{this.persistedObjects.remove(t)},Overlay.rightButton(t,()=>{MouseEditor.active=this.mouseEditor})}update(){this.persistedObjects.update()}draw(t,s){this.persistedObjects.draw(t,s)}}
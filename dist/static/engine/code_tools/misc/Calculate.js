import{Position}from"/static/engine/position/Position.js";export class Calculate{static directionBetween(t,a){const i=Math.atan2(a.y-t.y,a.x-t.x);return{x:t.x+t.width/2+100*Math.cos(i),y:t.y+t.height/2+100*Math.sin(i)}}static velocity(t,a,i=2){const n=a.x-t.x,s=a.y-t.y,e=Math.sqrt(n*n+s*s);return{x:n/e*i,y:s/e*i}}static insideCircle(t,a,i){return Math.sqrt((t.x-a.x)**2+(t.y-a.y)**2)<i}static withinAngle(t,a,i,n,s){const e={x:a.x-t.x,y:a.y-t.y},x=Math.atan2(e.y,e.x),y=Math.sqrt(e.x**2+e.y**2);return x>=i&&x<=n&&y<=s}static isObjectWithinTheAngle(t,a,i,n){n*=.3,n=Math.abs(n);const s=Math.atan2(i.y-a.y,i.x-a.x),e=Math.atan2(t.y-a.y,t.x-a.x),x=(180*s/Math.PI+360)%360,y=(180*e/Math.PI+360)%360;let h=(x-n/2+360)%360,r=(x+n/2+360)%360;return h>r?y>=h||y<=r:y>h&&y<r}}
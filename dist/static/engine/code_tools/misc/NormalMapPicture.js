import{Pixel}from"/static/engine/Pixel.js";import{AssertNotNull}from"/static/engine/assertions/AssertNotNull.js";import{a}from"/static/engine/code_tools/a.js";import{Picture}from"/static/engine/code_tools/misc/Picture.js";import{Mouse}from"/static/engine/controller/Mouse.js";import{Palette}from"/static/engine/core/Palette.js";import{Camera}from"/static/engine/core/camera/Camera.js";import{Position}from"/static/engine/position/Position.js";export class NormalMapPicture{constructor(t,i){AssertNotNull(t,"argument position in "+this.constructor.name+".js should not be null"),AssertNotNull(i,"argument normalMapPath in "+this.constructor.name+".js should not be null"),this.position=t,this.normalMapPath=i,this.position=t,this.position.width=200,this.position.height=200,this.normalMap=new Image,this.normalMap.src=i,this.lightPosition=new Position(0,0),this.lightColor={r:255,g:2,b:100},this.ambientLight=.4,this.picture=new Picture(this.position,"/static/assets/box.png")}draw(t,i){if(this.lightPosition.x=Mouse.position.x,this.lightPosition.y=Mouse.position.y,t.circle(this.lightPosition),this.picture.draw(t,i),this.normalMap.complete){const i=-Camera.position.x+Palette.width/2,o=-Camera.position.y+Palette.height/2,s=t.ctx.getImageData(this.position.x+i,this.position.y+o,this.position.width,this.position.height),e=t.ctx.getImageData(this.position.x+i,this.position.y+o,this.position.width,this.position.height);this.applyLighting(e,s),t.ctx.putImageData(e,this.position.x+i,this.position.y+o)}}applyLighting(t,i){const o=t.data,s=i.data,e=this.lightPosition.x-this.position.x,n=this.lightPosition.y-this.position.y,a=t.width,h=t.height;for(let t=0;t<o.length;t+=4){const i=t/4%a,r=Math.floor(t/4/a),l=h-1-r,p=s[4*(l*a+i)]/255*2-1,g=s[4*(l*a+i)+1]/255*2-1,m=s[4*(l*a+i)+2]/255*2-1,c=e-i,u=n-r,P=100,x=Math.sqrt(c*c+u*u+P*P),y={x:c/x,y:u/x,z:P/x},d=Math.max(0,p*y.x+g*y.y+m*y.z),M=new Pixel(o[t],o[t+1],o[t+2],o[t+3]);M.applyLighting(this.lightColor,d,this.ambientLight),M.applyToImageData(o,t)}}}
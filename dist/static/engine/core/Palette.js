import{a}from"/static/engine/code_tools/a.js";export class Palette{static width=window.innerWidth;static height=window.innerHeight;static createdCanvases=[];static onResize=[];static{let t;window.addEventListener("resize",()=>{clearTimeout(t),t=setTimeout(function(){console.log(`Window resized to: ${window.innerWidth} x ${window.innerHeight}`),Palette.width=window.innerWidth,Palette.height=window.innerHeight,Palette.createdCanvases.forEach(t=>{t.width=Palette.width,t.height=Palette.height}),Palette.onResize.forEach(t=>{t()})},50)})}static main(){const t=document.getElementById("canvases"),e=document.createElement("canvas");t.appendChild(e),Palette.createdCanvases.push(e),e.width=Palette.width,e.height=Palette.height;const a=e.getContext("2d");return a.imageSmoothingEnabled=!1,{canvas:e,ctx:a}}static offscreen(t=()=>{}){const e=new OffscreenCanvas(Palette.width,Palette.height),a=e.getContext("2d");return a.imageSmoothingEnabled=!1,Palette.createdCanvases.push(e),this.onResize.push(t),{canvas:e,ctx:a,width:Palette.width,height:Palette.height}}static fixedOffscreen(t,e){const a=new OffscreenCanvas(t,e),i=a.getContext("2d");return i.imageSmoothingEnabled=!1,{canvas:a,ctx:i,width:Palette.width,height:Palette.height,toImageBitmap:t=>{a.convertToBlob().then(t=>createImageBitmap(t)).then(e=>{t(e)})},drawImage:t=>{i.drawImage(t,0,0)},tintBlue:()=>{const t=i.getImageData(0,0,a.width,a.height),e=t.data;for(let t=0;t<e.length;t+=4){0!==e[t+3]&&(e[t]*=.1,e[t+1]*=.7,e[t+2]=Math.min(e[t+2]+50,255))}i.putImageData(t,0,0)}}}static clear(t){t.forEach(t=>{t.ctx.clearRect(0,0,Palette.width,Palette.height)})}static apply(t,e){e.forEach(e=>{t.ctx.drawImage(e.canvas,0,0)})}static fill(t,e){t.ctx.fillStyle=e,t.ctx.fillRect(0,0,Palette.width,Palette.height)}}
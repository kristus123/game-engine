import{AssertNotNull}from"/static/engine/assertions/AssertNotNull.js";import{StopWatch}from"/static/engine/code_tools/StopWatch.js";import{Random}from"/static/engine/code_tools/misc/Random.js";import{OnTrue}from"/static/engine/code_tools/on/OnTrue.js";import{LocalObjects}from"/static/engine/objects/LocalObjects.js";import{StaticGameObject}from"/static/engine/objects/StaticGameObject.js";const scale=8;export class Sprite extends StaticGameObject{constructor(t,s,i){super(t),AssertNotNull(t,"argument position in "+this.constructor.name+".js should not be null"),AssertNotNull(s,"argument image in "+this.constructor.name+".js should not be null"),AssertNotNull(i,"argument asepriteJson in "+this.constructor.name+".js should not be null"),this.position=t,this.image=s,this.asepriteJson=i,this.position.width=8*i.width,this.position.height=8*i.height,this.currentFrame=0,this.type="loop",this.onFinish=()=>{};for(let[t,s]of Object.entries(i.tags))this[t]={play:(s=()=>{})=>(this.currentFrame=0,this.activeTag=t,this.type="play",this.onFinish=s,this),loop:(s=()=>{})=>(this.currentFrame=0,this.activeTag=t,this.defaultTag=t,this.type="loop",this.onFinish=s,this),show:s=>(this.currentFrame=s,this.activeTag=t,this.defaultTag=t,this.type="show",this)};if(!this.idle)throw new Error("invalid default tag for .aseprite. idle must be present");this.idle.loop();const e=(new StopWatch).start();this.localObjects=new LocalObjects([new OnTrue(()=>e.time>=100,()=>{"show"==this.type||(this.currentFrame+1>=this.asepriteJson.totalFrames(this.activeTag)?(this.currentFrame=0,"play"==this.type&&(this.activeTag=this.defaultTag,this.type="loop",this.onFinish())):this.currentFrame+=1),e.restart()})]),this.slices=this.asepriteJson.tags[this.activeTag][this.currentFrame].slices.map(t=>{const s=t.position;return s.x=8*s.x+this.position.x,s.y=8*s.y+this.position.y,s.width*=8,s.height*=8,t})}randomStartFrame(){return this.currentFrame=Random.integerBetween(0,this.asepriteJson.totalFrames(this.activeTag)-1),this}update(){this.localObjects.update()}draw(t,s){this.localObjects.draw(t,s);const i=this.asepriteJson.tags[this.activeTag][this.currentFrame];t.sprite(this.position,i,this.image)}}
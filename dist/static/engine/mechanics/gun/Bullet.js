import{AssertNotNull}from"/static/engine/assertions/AssertNotNull.js";import{List}from"/static/engine/code_tools/misc/List.js";import{Collision}from"/static/engine/core/physics/Collision.js";import{ForcePush}from"/static/engine/core/physics/ForcePush.js";import{Push}from"/static/engine/core/physics/Push.js";import{DynamicGameObject}from"/static/engine/objects/DynamicGameObject.js";import{D}from"/static/game/world/D.js";export class Bullet extends DynamicGameObject{constructor(t,s,e){super(s,0,600),AssertNotNull(t,"argument gun in "+this.constructor.name+".js should not be null"),AssertNotNull(s,"argument from in "+this.constructor.name+".js should not be null"),AssertNotNull(e,"argument to in "+this.constructor.name+".js should not be null"),this.gun=t,this.from=s,this.to=e,this.hit=null,ForcePush(this).towards(e)}update(){for(const t of this.gun.hittableObjects)if(Collision.between(t,this)){t.onHit(),List.remove(this.gun.hittableObjects,t),List.remove(this.gun.bullets,this);break}}draw(t,s){t.new_circle(this,5)}}
import{AssertArray}from"/static/engine/assertions/AssertArray.js";import{AssertNoNullInArray}from"/static/engine/assertions/AssertNoNullInArray.js";import{AssertNotNull}from"/static/engine/assertions/AssertNotNull.js";import{List}from"/static/engine/code_tools/misc/List.js";import{Collision}from"/static/engine/core/physics/Collision.js";import{StaticGameObject}from"/static/engine/objects/StaticGameObject.js";export class DeliveryZone extends StaticGameObject{constructor(e,t=[]){super(e,""),AssertNotNull(e,"argument position in "+this.constructor.name+".js should not be null"),AssertNotNull(t,"argument objectsToDeliver in "+this.constructor.name+".js should not be null"),this.position=e,this.objectsToDeliver=t,AssertArray(t),AssertNoNullInArray(t),this.deliveredObjects=[]}completed(){return this.deliveredObjects.length==this.objectsToDeliver.length}inside(e){return Collision.between(this,e)}get amountDelivered(){return this.deliveredObjects.length}update(){for(const e of this.objectsToDeliver)Collision.between(this,e)&&!List.includes(this.deliveredObjects,e)&&this.deliveredObjects.push(e);for(const e of this.deliveredObjects)e.velocity.x=0,e.velocity.y=0}draw(e,t){e.transparentGreenRectangle(this.position)}}
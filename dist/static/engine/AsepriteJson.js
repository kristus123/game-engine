import{AssertNotNull}from"/static/engine/assertions/AssertNotNull.js";import{a}from"/static/engine/code_tools/a.js";import{Position}from"/static/engine/position/Position.js";export class AsepriteJson{constructor(s){AssertNotNull(s,"argument json in "+this.constructor.name+".js should not be null"),this.json=s,this.tags={};for(const t of[...new Set(Object.values(s.frames).map(s=>s.filename))]){if(""==t)throw new Error(`${s.meta.image} must have a tag set`);this.tags[t]=[]}if(s.frames){let t=-1;for(const e of s.frames){t+=1;const o={x:e.frame.x,y:e.frame.y,width:e.frame.w,height:e.frame.h,slices:[]};if(this.width=e.frame.w,this.height=e.frame.h,s.meta.slices)for(const e of s.meta.slices){const s=e.keys[t].bounds;o.slices.push({name:e.name,position:new Position(s.x,s.y,s.w,s.h)})}this.tags[e.filename].push(o)}}}tagPresent(s){return s in this.tags}totalFrames(s){return this.tags[s].length}get singleFrame(){return 1==this.json.frames.length}}
import{AssertNotNull}from"/static/engine/assertions/AssertNotNull.js";import{List}from"/static/engine/code_tools/misc/List.js";import{Http}from"/static/engine/http/Http.js";import{AllObjects}from"/static/engine/objects/AllObjects.js";export class PersistedObjects extends AllObjects{constructor(t,s){super([]),AssertNotNull(t,"argument filePath in "+this.constructor.name+".js should not be null"),AssertNotNull(s,"argument mapFromJson in "+this.constructor.name+".js should not be null"),this.filePath=t,this.mapFromJson=s,Http.get(this.filePath).map(t=>s(t)).forEach(t=>super.add(t))}add(t){AssertNotNull(t.objectId,"objectId should not be null. It is needed to persist");const s=Http.get(this.filePath);s.push(t.mapToJson()),Http.post(this.filePath,s),super.add(t)}persist(t){const s=Http.get(this.filePath).map(t=>this.mapFromJson(t));List.removeIf(s,s=>s.objectId==t.objectId),s.push(t),Http.post(this.filePath,s.map(t=>t.mapToJson()))}remove(t){const s=Http.get(this.filePath);List.removeIf(s,s=>s.objectId==t.objectId),Http.post(this.filePath,s),super.remove(t)}}
import{a}from"/static/engine/code_tools/a.js";import{Call}from"/static/engine/code_tools/tools/Call.js";import{Html}from"/static/engine/graphics/ui/html/Html.js";import{SocketClient}from"/static/engine/socket/SocketClient.js";export class VideoCall{constructor(){this.localStream,this.clientId,this.fromClientId,this.peerConnection={},this.startCall(),this.connectedClientId=[],this.socketClient=new SocketClient(8082,e=>{e.on("RTC_CLIENT_INFO",e=>{this.clientId=e.clientId}),e.on("RTC_CLIENT_CONNECTED",e=>{for(let t=0;t<this.connectedClientId.length;t++){if(this.connectedClientId[t]==e.clientId)return void console.warn("found")}if(this.clientId==e.clientId)return;this.connectedClientId.push(e.clientId);const t=setInterval(()=>{null!=this.localStream&&clearInterval(t);const n=this.createPeerConnection(e.clientId);this.peerConnection[e.clientId]=n,this.localStream.getTracks().forEach(e=>{n.addTrack(e,this.localStream)}),n.createOffer().then(e=>n.setLocalDescription(e)).then(()=>{console.warn(e.clientId+" offer send"),this.socketClient.send({action:"RTC_OFFER",offer:n.localDescription,clientId:e.clientId})})},100)}),e.on("RTC_OFFER",e=>{console.warn(e.clientId+" offer recived"),this.fromClientId=e.fromClientId,console.warn("from "+this.fromClientId);const t=this.createPeerConnection(e.clientId);t||(startCall(),console.warn("Star")),this.peerConnection[e.clientId]=t,t.setRemoteDescription(new RTCSessionDescription(e.offer)).then(()=>t.createAnswer()).then(e=>t.setLocalDescription(e)).then(()=>{console.warn(e.clientId+" answer send"),this.socketClient.send({action:"RTC_ANSWER",answer:t.localDescription,clientId:e.clientId,fromClientId:this.fromClientId})}).catch(e=>{console.error("Error handling offer",e)})}),e.on("RTC_ANSWER",e=>{console.warn(e.clientId+" answer recived from "+e.fromClientId),console.warn(e.answer),this.socketClient.send({action:"RTC_CLIENT_CONNECTED",clientId:e.clientId,connectedClientId:this.connectedClientId});this.peerConnection[e.clientId].setRemoteDescription(new RTCSessionDescription(e.answer)).catch(e=>{console.error("Error setting remote description from answer",e)})}),e.on("RTC_ICE_CANDIDATE",e=>{console.warn(e.clientId+" recives icecandinate");const t=this.peerConnection[e.clientId];t&&t.addIceCandidate(new RTCIceCandidate(e.candidate)).catch(e=>{console.error("Error adding received ICE candidate:",e)})}),e.on("RTC_CLIENT_DISCONNECTED",e=>{console.warn(e.clientId+" disconnected");const t=document.getElementById(e.clientId);t&&t.remove();const n=this.peerConnection[e.clientId];n&&(n.close(),delete this.peerConnection[e.clientId])})})}createPeerConnection(e){const t=new RTCPeerConnection({iceServers:[{urls:"stun:stun.l.google.com:19302"}]});return t.ontrack=e=>{console.warn(this.clientId+" "+this.fromClientId);let t=document.getElementById(this.fromClientId);t||(t=Html.guestVideo(e.streams[0],this.fromClientId)),t.srcObject=e.streams[0]},t.onicecandidate=t=>{t.candidate&&this.socketClient.send({action:"RTC_ICE_CANDIDATE",candidate:t.candidate,clientId:e})},t}startCall(){navigator.mediaDevices.getUserMedia({video:!0,audio:!0}).then(e=>{Html.localVideo(e);this.localStream=e}).catch(e=>{console.error("Error starting call",e)})}}
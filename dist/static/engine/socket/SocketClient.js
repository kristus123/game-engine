import{AssertNotNull}from"/static/engine/assertions/AssertNotNull.js";import{a}from"/static/engine/code_tools/a.js";import{Random}from"/static/engine/code_tools/misc/Random.js";const clientId=Random.uuid();export class SocketClient{constructor(t,o){AssertNotNull(t,"argument port in "+this.constructor.name+".js should not be null"),AssertNotNull(o,"argument run in "+this.constructor.name+".js should not be null"),this.port=t,this.run=o,this.listeners={},this.clientId=clientId,this.webSocket=new WebSocket(`ws://localhost:${t}?clientId=${this.clientId}`),this.webSocket.onopen=()=>{},o(this),this.webSocket.onmessage=t=>{const o=JSON.parse(t.data);if(this.listeners[o.action])try{this.listeners[o.action](o)}catch(t){throw console.log("An error occurred when doing "+o.action),console.log(t),t}else console.log(o.action+" not found")},this.webSocket.onclose=()=>{this.close()}}send(t){this.webSocket.readyState===WebSocket.OPEN&&this.webSocket.send(JSON.stringify(t))}close(){}on(t,o){this.listeners[t]=o}}
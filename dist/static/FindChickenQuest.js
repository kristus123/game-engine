import{AssertNotNull}from"/static/engine/assertions/AssertNotNull.js";import{Chicken}from"/static/engine/chicken_stuff/Chicken.js";import{List}from"/static/engine/code_tools/misc/List.js";import{Button}from"/static/engine/graphics/ui/Button.js";import{Html}from"/static/engine/graphics/ui/html/Html.js";import{MovableObjects}from"/static/engine/mechanics/MovableObjects.js";import{Quest}from"/static/engine/mechanics/quest/Quest.js";import{QuestList}from"/static/engine/mechanics/quest/QuestList.js";import{LocalObjects}from"/static/engine/objects/LocalObjects.js";export class FindChickenQuest{constructor(t,e){AssertNotNull(t,"argument kid in "+this.constructor.name+".js should not be null"),AssertNotNull(e,"argument player in "+this.constructor.name+".js should not be null"),this.kid=t,this.player=e;const s=new Chicken(t.position.offset(800).copy());this.localObjects=new LocalObjects([s,new MovableObjects(e,[s]),new Quest([()=>new class{constructor(){this.completed=()=>!1,this.button=new Button(t.position.right(50),"of course!",t=>{Html.remove(t),QuestList.add("find his chicken"),this.completed=()=>!0})}update(){this.button.update()}draw(s,i){t.within(300,e)?s.text(t.position.over(),"can you help me? My chicken is missing"):s.text(t.position.over(),"!!!")}},()=>new class{completed(){return!(!s.within(200,t)&&!s.touches(t))&&(s.velocity.reset(),!0)}draw(e,i){t.within(300,s)?e.text(t.position.over(),"THANK YOU SO MUCH! i hope he's safe"):e.text(t.position.over(),"!!!")}},()=>new class{completed(){return!1}draw(e,i){t.within(300,s)?e.text(t.position.over(),"YOU FOUND HIM. THANK YOU!"):s.notWithin(300,t)&&e.text(t.position.over(),"MY CHICKEN!! WHAT ARE YOU DOING???")}}])])}update(){this.localObjects.update()}draw(t,e){this.localObjects.draw(t,e)}}
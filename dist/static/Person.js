import{AssertNotNull}from"/static/engine/assertions/AssertNotNull.js";import{Picture}from"/static/engine/code_tools/misc/Picture.js";import{Button}from"/static/engine/graphics/ui/Button.js";import{Html}from"/static/engine/graphics/ui/html/Html.js";import{MultiTextTyper}from"/static/engine/mechanics/dialogue/MultiTextTyper.js";import{TextTyper}from"/static/engine/mechanics/dialogue/TextTyper.js";import{DynamicGameObject}from"/static/engine/objects/DynamicGameObject.js";import{LocalObjects}from"/static/engine/objects/LocalObjects.js";import{D}from"/static/game/world/D.js";export class Person extends DynamicGameObject{constructor(t,e){super(t,10,10),AssertNotNull(t,"argument position in "+this.constructor.name+".js should not be null"),AssertNotNull(e,"argument player in "+this.constructor.name+".js should not be null"),this.position=t,this.player=e,this.position.width=170,this.position.height=300,this.picture=new Picture(this.position,"/static/assets/person.png"),this.localObjects=new LocalObjects,this.text=new MultiTextTyper(this.position.over(),["HJEY!!!"],()=>{this.localObjects.add(new Button(this.position.over(),"what is it?",t=>{Html.remove(t),this.text=new MultiTextTyper(this.position.over(),["i have some cum"],()=>{this.localObjects.add(new Button(this.position.over(),"wow really?",t=>{Html.remove(t),this.text=new MultiTextTyper(this.position.over(),["yes sir!"])}))})}))})}update(){this.localObjects.update()}draw(t,e){this.picture.draw(t,e),this.within(300,this.player)?(this.text.update(),this.text.draw(t,e)):t.text(this.position.over(),"!!!")}}
import{G}from"/static/engine/G.js";import{AssertNotNull}from"/static/engine/assertions/AssertNotNull.js";import{Random}from"/static/engine/code_tools/misc/Random.js";import{Mouse}from"/static/engine/controller/Mouse.js";import{Loop}from"/static/engine/core/Loop.js";import{ForcePush}from"/static/engine/core/physics/ForcePush.js";import{Move}from"/static/engine/core/physics/Move.js";import{Push}from"/static/engine/core/physics/Push.js";import{Sprite}from"/static/engine/graphics/sprite/Sprite.js";import{DynamicGameObject}from"/static/engine/objects/DynamicGameObject.js";import{LocalObjects}from"/static/engine/objects/LocalObjects.js";import{D}from"/static/game/world/D.js";import{Poop}from"/static/game/world/Poop.js";export class SimpleMonster extends DynamicGameObject{constructor(t){super(t,10,10),AssertNotNull(t,"argument position in "+this.constructor.name+".js should not be null"),this.position=t,this.position.width=60,this.position.height=40,this.hunger=50,this.localObjects=new LocalObjects([new HorizontalSprite(this.position,"/static/assets/blob_57x32.png")]),this.ranch=null}get happy(){for(const t of G.zone.regions)if(this.touches(t))return!0;return!1}update(){this.localObjects.update(),this.hunger-=.1,this.hunger<0&&this.removeFromLoop(),Random.percentageChance(100)&&G.poop.add(new Poop(this.position.copy()));const t=this.touchesAny(G.ranches);t&&(t.add(this),this.ranch=t),Mouse.holdAndMove(this),this.sleepyTime?Move(this).towards(G.barn):ForcePush(this).towards(Random.direction(this.position),5)}draw(t,o){this.localObjects.draw(t,o)}}
import{AssertNotNull}from"/static/engine/assertions/AssertNotNull.js";import{ForcePush}from"/static/engine/core/physics/ForcePush.js";import{Push}from"/static/engine/core/physics/Push.js";import{Sprite}from"/static/engine/graphics/sprite/Sprite.js";import{SimplePathFinder}from"/static/engine/mechanics/SimplePathFinder.js";import{PathFinder}from"/static/engine/mechanics/path_finder/PathFinder.js";import{DynamicGameObject}from"/static/engine/objects/DynamicGameObject.js";import{LocalObjects}from"/static/engine/objects/LocalObjects.js";import{Velocity}from"/static/engine/objects/Velocity.js";import{Position}from"/static/engine/position/Position.js";import{D}from"/static/game/world/D.js";import{Update}from"/static/game/world/Update.js";export class BlobMonster extends DynamicGameObject{constructor(t,s){super(new Position(800,0,300,200),10,10),AssertNotNull(t,"argument player in "+this.constructor.name+".js should not be null"),AssertNotNull(s,"argument invisibleWalls in "+this.constructor.name+".js should not be null"),this.player=t,this.invisibleWalls=s;const i=new SimplePathFinder(this,t,s);this.localObjects=new LocalObjects([i,new HorizontalSprite(this.position,"/static/assets/blob_57x32.png"),Update(t=>{i.success?ForcePush(this).towards(i.c2,29):ForcePush(this).towards(i.c1,29),(this.within(100,i.c2)||this.within(100,i.c1))&&this.decreaseVelocity(.8),this.velocity.cap=100})])}update(){this.localObjects.update()}draw(t,s){this.localObjects.draw(t,s)}}
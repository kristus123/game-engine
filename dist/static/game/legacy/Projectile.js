import{Collision}from"/static/engine/core/physics/Collision.js";import{DynamicGameObject}from"/static/engine/objects/DynamicGameObject.js";import{Position}from"/static/engine/position/Position.js";import{D}from"/static/game/world/D.js";export class Projectile extends DynamicGameObject{constructor(){super(new Position(0,0,10,10),0,4e3),this.from=null,this.radius=10,this.color="red",this.to={x:0,y:0},this.connectedTo=null,this.shot=!1}onCollision(t){this.shot&&t instanceof Spaceship&&(this.connectedTo=t)}shoot(t,i){this.from=t,this.connectedTo=!1,this.x=t.x+200,this.y=t.y+200,this.to=i,this.shot=!0;const o=Math.atan2(i.y-this.y,i.x-this.x);this.velocity={x:Math.cos(o)*this.velocityFactor,y:Math.sin(o)*this.velocityFactor}}draw(t,i){this.shot&&this.connectedTo?(t.lineBetween(this.from,this.connectedTo),t.circle(this.connectedTo.x,this.connectedTo.y,this.radius,this.color)):this.shot&&(t.circle(this.x,this.y,this.radius,this.color),t.lineBetween(this.from,this))}}
import{AssertNotNull}from"/static/engine/assertions/AssertNotNull.js";import{a}from"/static/engine/code_tools/a.js";import{Draw}from"/static/engine/core/Draw.js";import{Palette}from"/static/engine/core/Palette.js";import{Position}from"/static/engine/position/Position.js";import{D}from"/static/game/world/D.js";export class CanvasRenderer{constructor(t=100,e=100){AssertNotNull(t,"argument width in "+this.constructor.name+".js should not be null"),AssertNotNull(e,"argument height in "+this.constructor.name+".js should not be null"),this.width=t,this.height=e,this.palette=Palette.fixedOffscreen(t,e),this.ctx=this.palette.canvas.getContext("2d"),this.draw=new Draw(this.palette.ctx),this.ib=null}tintBlue(t){const e=t.ctx,s=t.canvas,i=e.getImageData(0,0,s.width,s.height),a=i.data;for(let t=0;t<a.length;t+=4){0!==a[t+3]&&(a[t]*=.1,a[t+1]*=.7,a[t+2]=Math.min(a[t+2]+50,255))}e.putImageData(i,0,0)}renderImageBitmap(t){this.palette.canvas.convertToBlob().then(t=>createImageBitmap(t)).then(e=>{this.ib=e,t()})}}
import{G}from"/static/engine/G.js";import{AssertNotNull}from"/static/engine/assertions/AssertNotNull.js";import{Chicken}from"/static/engine/chicken_stuff/Chicken.js";import{OnChange}from"/static/engine/code_tools/on/OnChange.js";import{OnTrue}from"/static/engine/code_tools/on/OnTrue.js";import{Controller}from"/static/engine/controller/Controller.js";import{KeyDown}from"/static/engine/controller/keyboard/KeyDown.js";import{Keyboard}from"/static/engine/controller/keyboard/Keyboard.js";import{Square}from"/static/engine/graphics/Square.js";import{Sprite}from"/static/engine/graphics/sprite/Sprite.js";import{Html}from"/static/engine/graphics/ui/html/Html.js";import{DynamicGameObject}from"/static/engine/objects/DynamicGameObject.js";import{LocalObjects}from"/static/engine/objects/LocalObjects.js";import{ChickenFood}from"/static/game/ChickenFood.js";import{D}from"/static/game/world/D.js";import{Init}from"/static/game/world/Init.js";import{Throw}from"/static/game/world/Throw.js";export class Player extends DynamicGameObject{constructor(o){super(o,4e3,200),AssertNotNull(o,"argument position in "+this.constructor.name+".js should not be null"),this.position=o,this.localObjects=new LocalObjects([Init(this,{sprite:G.Sprite.player(this.position,1)}),new Throw(()=>new ChickenFood(this.position.copy())),G.splash,new OnChange(()=>this.holding,o=>{o?this.sprite.happy.loop():this.sprite.idle.loop()}),new OnTrue(()=>Keyboard.up,()=>{"poop"!=this.sprite.activeTag&&this.sprite.up.loop()}),new OnTrue(()=>Keyboard.down,()=>{"poop"!=this.sprite.activeTag&&this.sprite.down.loop()}),new OnTrue(()=>Keyboard.left,()=>{"poop"!=this.sprite.activeTag&&this.sprite.left.loop()}),new OnTrue(()=>Keyboard.right,()=>{"poop"!=this.sprite.activeTag&&this.sprite.right.loop()}),new OnTrue(()=>Keyboard.noButtonsPressed(),()=>{"poop"!=this.sprite.activeTag&&this.sprite.idle.loop()})]),KeyDown("e",()=>{if(this.holding)this.holding=null;else{const o=this.touchesAny(G.poops);o&&(this.holding=o,console.log("hei"))}}),KeyDown("p",()=>{Controller.disabled=!0,this.velocity.reset(),this.sprite.poop.play(()=>{Controller.disabled=!1;const o=new Square(this.position.copy(40,80),20);o.color="brown",G.poops.add(o),G.splash.random(o,"brown"),Html.fadeaway("poop",this.position.copy().up(200).left(400))})})}update(){this.localObjects.update(),this.holding&&this.holding.position.xy(this.position.offset(50))}draw(o,t){if(this.localObjects.draw(o,t),this.holding)o.text(this.holding.position.offset(100),'"E" to drop');else{const t=this.touchesAny(G.poops);t&&o.text(t.position.offset(0),'"E" to pick up')}}}
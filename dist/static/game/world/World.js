import{G}from"/static/engine/G.js";import{a}from"/static/engine/code_tools/a.js";import{Random}from"/static/engine/code_tools/misc/Random.js";import{OnChange}from"/static/engine/code_tools/on/OnChange.js";import{Controller}from"/static/engine/controller/Controller.js";import{Mouse}from"/static/engine/controller/Mouse.js";import{Keyboard}from"/static/engine/controller/keyboard/Keyboard.js";import{Sleep}from"/static/engine/core/Sleep.js";import{Camera}from"/static/engine/core/camera/Camera.js";import{Grid}from"/static/engine/graphics/Grid.js";import{Sprite}from"/static/engine/graphics/sprite/Sprite.js";import{HtmlProgressBar}from"/static/engine/graphics/ui/html/HtmlProgressBar.js";import{Dialogue}from"/static/engine/mechanics/dialogue/Dialogue.js";import{Text}from"/static/engine/mechanics/dialogue/Text.js";import{TextTyper}from"/static/engine/mechanics/dialogue/TextTyper.js";import{Quest}from"/static/engine/mechanics/quest/Quest.js";import{LocalObjects}from"/static/engine/objects/LocalObjects.js";import{Position}from"/static/engine/position/Position.js";import{D}from"/static/game/world/D.js";import{Grass}from"/static/game/world/Grass.js";import{Npc}from"/static/game/world/Npc.js";import{Player}from"/static/game/world/player/Player.js";export class World{constructor(){G.player=new Player(new Position(150,0)),Controller.control(G.player),Camera.followInstantly(G.player),G.friend=new Npc(new Position(0,-400)),G.poops=new LocalObjects,G.flowers=new LocalObjects(Random.positions(0,800,0,800,20).map(e=>{const o=G.Sprite.flower(e);return o.idle.show(0),o})),this.grass=new LocalObjects;const e=new Grid;Mouse.onClick=o=>{const t=e.snappedPosition(o),r=G.Sprite.wheat(t).grow.show(9);this.grass.add(r)},this.world=G.Sprite.world(new Position(-1e3,-1e3)),this.localObjects=new LocalObjects([this.world,this.grass,...(new Grid).positions.map(e=>new Grass(e)),new Quest([()=>new class{constructor(){G.friend.sprite.prepareSleep.play(()=>{G.friend.sprite.sleep.loop(),this.completed=()=>!0})}completed(){return!1}},()=>new Dialogue([new TextTyper(G.player,"i must go talk to my friend")]),()=>new class{completed(){return G.player.touches(G.friend)&&Keyboard.e}update(){}draw(e,o){G.player.touches(G.friend)&&e.text(G.friend,'press "e" to talk')}},()=>new class{constructor(){G.friend.sprite.talk.loop()}completed(){return!0}},()=>new Dialogue([new TextTyper(G.friend,"hi there!"),new TextTyper(G.player,"what should i do?"),new TextTyper(G.friend,'try to poop by pressing "p"'),new TextTyper(G.friend,"poop 4 times!")]),()=>new class{constructor(){G.friend.sprite.prepareSleep.play(()=>{G.friend.sprite.sleep.loop()}),HtmlProgressBar.create(),this.d=new Dialogue([new TextTyper(G.friend,G.poops.length.toString())]),this.localObjects=new LocalObjects([new OnChange(()=>G.poops.length,()=>{HtmlProgressBar.change(25),this.d=new Dialogue([new TextTyper(G.friend,G.poops.length.toString())])})])}completed(){return G.poops.length>=4}update(){this.d.update(),this.localObjects.update()}draw(e,o){this.d.draw(e,o),this.localObjects.draw(e,o)}},()=>new class{completed(){return HtmlProgressBar.remove(),!0}},()=>new Dialogue([new TextTyper(G.friend,"good job!"),new TextTyper(G.friend,"now place the poop in the poop area")]),()=>new class{constructor(){this.deliveryZone=new Position(400,200,100,100)}completed(){this.count=0;for(const e of G.poops)e.touches(this.deliveryZone)&&(this.count+=1);return 4==this.count}draw(e,o){e.text(this.deliveryZone.over(200),`${this.count}/4`),e.orange(this.deliveryZone)}},()=>new Dialogue([new TextTyper(G.friend,"good job!"),new TextTyper(G.friend,"now we have a bunch of poop!"),new TextTyper(G.friend,"try to poop on the flowers to make them grow strong!")])]),G.friend,G.poops,G.flowers,G.player])}update(){this.localObjects.update();for(const e of G.flowers){G.player.touches(e)?e.idle.show(1):e.idle.show(0);for(const o of G.poops)o.touches(e)&&e.idle.show(2)}}draw(e,o){this.localObjects.draw(e,o)}}